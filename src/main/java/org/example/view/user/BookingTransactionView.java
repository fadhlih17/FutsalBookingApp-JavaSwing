/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.example.view.user;

import org.example.controllers.BookingController;
import org.example.controllers.CategoryController;
import org.example.controllers.VenueController;
import org.example.dependencyInjection.BookingControllerFactory;
import org.example.dependencyInjection.CategoryControllerFactory;
import org.example.dependencyInjection.VenueControllerFactory;
import org.example.dtos.BookedVenuesResponse;
import org.example.dtos.BookingRequest;
import org.example.dtos.VenueResponse;
import org.example.models.Category;
import org.example.models.Venue;
import org.example.view.user.UserMenuView;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.io.File;
import java.sql.Time;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.List;

/**
 *
 * @author fadhl
 */
public class BookingTransactionView extends javax.swing.JFrame {
    private CategoryControllerFactory categoryFactory = new CategoryControllerFactory();
    private VenueControllerFactory venueFactory = new VenueControllerFactory();
    private CategoryController categoryController = categoryFactory.controller();
    private VenueController venueController = venueFactory.controller();
    private BookingControllerFactory bookingFactory = new BookingControllerFactory();
    private BookingController bookingController = bookingFactory.controller();
    Time start, end;
    String venueName, userId;
    public BookingTransactionView() {
        container();
    }
    public BookingTransactionView(String userId){
        this.userId = userId;
        container();
    }
    private void  container(){
        initComponents();
        fillCbCategories();
        fillCbVenues();
        fillCbTime();
        txtTotalPrice.setEditable(false);
        txtUploadPhoto.setEditable(false);
        updatePrice();
        fillCbCategoriesSearch();
        readTable();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBookedList = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        cbCategoryInput = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cbVenue = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtDateBooking = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        txtTotalPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbStart = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        cbEnd = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtUploadPhoto = new javax.swing.JTextField();
        btnChoosePhoto = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        btnAskPayment = new javax.swing.JButton();
        txtDateSearch = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cbCategorySearch = new javax.swing.JComboBox<>();
        btnSearch = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Halaman Pemesanan");

        tblBookedList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id Lapangan", "Nama", "Kategori", "Pemesan", "Tanggal", "Mulai", "Selesai"
            }
        ));
        jScrollPane1.setViewportView(tblBookedList);

        jLabel2.setText("Kategori");

        cbCategoryInput.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCategoryInputItemStateChanged(evt);
            }
        });

        jLabel3.setText("Lapangan");

        cbVenue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbVenueActionPerformed(evt);
            }
        });

        jLabel4.setText("Tanggal");

        jLabel5.setText("Jumlah yang harus dibayar");

        jLabel6.setText("Mulai");

        cbStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStartActionPerformed(evt);
            }
        });

        jLabel7.setText("Selesai");

        cbEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEndActionPerformed(evt);
            }
        });

        jLabel8.setText("Upload Bukti Pembayaran");

        btnChoosePhoto.setText("Pilih File");
        btnChoosePhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChoosePhotoActionPerformed(evt);
            }
        });

        btnSubmit.setBackground(new java.awt.Color(0, 153, 0));
        btnSubmit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setText("Pesan");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnAskPayment.setBackground(new java.awt.Color(255, 51, 51));
        btnAskPayment.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAskPayment.setForeground(new java.awt.Color(255, 255, 255));
        btnAskPayment.setText("Cara Pembayaran ?");

        jLabel9.setText("Cari tanggal");

        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("* Untuk melakukan pemesanan, Pastikan jadwal yang dipilih kosong");

        cbCategorySearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCategorySearchActionPerformed(evt);
            }
        });

        btnSearch.setText("Cari");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("List Jadwal yang sudah terisi");

        btnReset.setBackground(new java.awt.Color(0, 102, 255));
        btnReset.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setText("Clear");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("* Sertakan bukti pembayaran sebelum membuat pesanan");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(357, 357, 357))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtDateBooking, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                                        .addComponent(cbVenue, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cbCategoryInput, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                        .addGap(11, 11, 11))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(cbEnd, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbStart, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtTotalPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel12)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtUploadPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnChoosePhoto)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnAskPayment))
                                        .addComponent(jLabel10))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDateSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cbCategorySearch, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch)
                        .addGap(8, 8, 8)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbCategoryInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbVenue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDateBooking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUploadPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnChoosePhoto)
                            .addComponent(btnAskPayment))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel11)))
                                .addComponent(cbCategorySearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDateSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookingTransactionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookingTransactionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookingTransactionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookingTransactionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookingTransactionView().setVisible(true);
            }
        });
    }

    private void fillCbCategories(){
        final List<Category> allCategories = categoryController.findAllCategories();

        cbCategoryInput.addItem("Pilih Kategori");
        for (Category allCategory : allCategories) {
            cbCategoryInput.addItem(allCategory.getName());
        }
    }
    private void fillCbCategoriesSearch(){
        final List<Category> allCategories = categoryController.findAllCategories();

        cbCategorySearch.addItem("Semua");
        for (Category allCategory : allCategories) {
            cbCategorySearch.addItem(allCategory.getName());
        }
    }
    private void fillCbVenues(){
        List<VenueResponse> allVenues = null;
        String category = (String) cbCategoryInput.getSelectedItem();

        if (cbCategoryInput.getSelectedItem().equals("Pilih Kategori")){
            cbVenue.removeAllItems();
            cbVenue.addItem("Pilih Lapangan");
            allVenues = venueController.findAllVenues();
            for (VenueResponse allVenue : allVenues) {
                cbVenue.addItem(allVenue.getName());
            }
        }
    }
    private void fillCbTime(){
        List<String> venueList = venueController.findRandomTime();
        String venueName = (String) cbVenue.getSelectedItem();

        if (cbVenue.getSelectedItem().equals("Pilih Lapangan")){
            cbStart.removeAllItems();
            cbEnd.removeAllItems();
            for (String s : venueList) {
                cbStart.addItem(s);
                cbEnd.addItem(s);
            }
        }
    }
    private void updatePrice(){
        String venId = venueId();
        long l = bookingController.fillPrice(start, end, venId);
        txtTotalPrice.setText(String.valueOf(l));
    }
    private String venueId(){
        Venue venueByName = venueController.findVenueByName(venueName);
        if (venueByName == null){
            return "";
        }
        return venueByName.getId();
    }
    private void cbCategoryInputItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCategoryInputItemStateChanged
        // TODO add your handling code here:
        List<VenueResponse> allVenues = null;
        String category = (String) cbCategoryInput.getSelectedItem();

        if (!cbCategoryInput.getSelectedItem().equals("Pilih Kategori")){
            cbVenue.removeAllItems();
            cbVenue.addItem("Pilih Lapangan");
            allVenues = venueController.findVenueByCategory(category);
            for (VenueResponse allVenue : allVenues) {
                cbVenue.addItem(allVenue.getName());
            }
        }
        fillCbVenues();
    }//GEN-LAST:event_cbCategoryInputItemStateChanged

    private void uploadPhoto(){
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(null);
        File file = fileChooser.getSelectedFile();
        String imageUrl = file.getAbsolutePath();
        txtUploadPhoto.setText(imageUrl);
    }
    private void createBooking(){
        String userId = this.userId;
        String venueId = venueId();
        Date date = txtDateBooking.getDate();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String dateBooked = sdf.format(date);
        Time start = Time.valueOf(cbStart.getSelectedItem().toString());
        Time end = Time.valueOf(cbEnd.getSelectedItem().toString());
        long price = Long.parseLong(txtTotalPrice.getText());
        String imageUrl = txtUploadPhoto.getText();
        bookingController.createBooking(new BookingRequest(userId, venueId, dateBooked, start, end, price, imageUrl));
        JOptionPane.showMessageDialog(this, "Berhasil membuat pesanan, tunggu konfirmasi admin");
        reset();
    }
    private void reset(){
        txtUploadPhoto.setText("");
        txtDateBooking.setDate(null);
        txtDateSearch.setDate(null);
        txtTotalPrice.setText("");
        cbVenue.setSelectedItem("Pilih Lapangan");
        cbCategoryInput.setSelectedItem("Pilih Kategori");
        cbCategorySearch.setSelectedItem("Semua");
    }

    private void readTable() {
        DefaultTableModel model = (DefaultTableModel) tblBookedList.getModel();
        int row = 0;

        List<BookedVenuesResponse> venues = null;
        if (txtDateSearch.getDate() != null && !cbCategorySearch.getSelectedItem().equals("Semua")){
            Date date = txtDateSearch.getDate();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String dateString = sdf.format(date);
            venues = bookingController.findBookedVenuesByDateCategory(dateString, cbCategorySearch.getSelectedItem().toString());
        } else if(txtDateSearch.getDate() != null && cbCategorySearch.getSelectedItem().equals("Semua")){
            Date date = txtDateSearch.getDate();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String dateString = sdf.format(date);
            venues = bookingController.findBookedVenuesByDate(dateString);
        } else if(txtDateSearch.getDate() == null && !cbCategorySearch.getSelectedItem().equals("Semua")){
            venues = bookingController.findBookedVenuesByCategory(cbCategorySearch.getSelectedItem().toString());
        } else {
            venues = bookingController.findBookedVenues();
        }

        model.setRowCount(venues.size());
        for (BookedVenuesResponse venue : venues) {
            String email = venue.getUserEmail();
            String subs = email.substring(0, 4);
            String userEmail = subs + "**********";
            model.setValueAt(venue.getVenueId(), row, 0);
            model.setValueAt(venue.getVenueName(), row, 1);
            model.setValueAt(venue.getVenueCategory(), row, 2);
            model.setValueAt(userEmail, row, 3);
            model.setValueAt(venue.getDateBooked(), row, 4);
            model.setValueAt(venue.getStartTime(), row, 5);
            model.setValueAt(venue.getEndTime(), row, 6);
            row++;
        }
    }
    private void cbStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStartActionPerformed
        // TODO add your handling code here:
        start = Time.valueOf((String) cbStart.getSelectedItem());
        updatePrice();
    }//GEN-LAST:event_cbStartActionPerformed

    private void cbEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEndActionPerformed
        // TODO add your handling code here:
        end = Time.valueOf((String) cbEnd.getSelectedItem());
        updatePrice();
    }//GEN-LAST:event_cbEndActionPerformed

    private void cbVenueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbVenueActionPerformed
        // TODO add your handling code here:
        venueName = (String) cbVenue.getSelectedItem();
        venueId();
    }//GEN-LAST:event_cbVenueActionPerformed

    private void btnChoosePhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChoosePhotoActionPerformed
        // TODO add your handling code here:
        uploadPhoto();
    }//GEN-LAST:event_btnChoosePhotoActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        createBooking();
        reset();
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        readTable();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void cbCategorySearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCategorySearchActionPerformed
        // TODO add your handling code here:
        readTable();
    }//GEN-LAST:event_cbCategorySearchActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAskPayment;
    private javax.swing.JButton btnChoosePhoto;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cbCategoryInput;
    private javax.swing.JComboBox<String> cbCategorySearch;
    private javax.swing.JComboBox<String> cbEnd;
    private javax.swing.JComboBox<String> cbStart;
    private javax.swing.JComboBox<String> cbVenue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblBookedList;
    private com.toedter.calendar.JDateChooser txtDateBooking;
    private com.toedter.calendar.JDateChooser txtDateSearch;
    private javax.swing.JTextField txtTotalPrice;
    private javax.swing.JTextField txtUploadPhoto;
    // End of variables declaration//GEN-END:variables
}
